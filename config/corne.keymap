/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7>;
        };

        PUP {
            bindings = <&kp PAGE_UP>;
            key-positions = <10 11>;
        };

        PDOWN {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <22 23>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    macros {
        ctrlshifv: ctrlshifv {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(LA(V)))>;
            label = "CTRLSHIFV";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P             &kp MINUS
&kp LEFT_SHIFT    &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI          &kp GRAVE
&kp LEFT_COMMAND  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp SINGLE_QUOTE  &kp BACKSPACE
                                &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_ALT  &kp TAB         &kp UP_ARROW  &kp HOME   &kp END     &kp TILDE    &kp APOS       &kp N7        &kp N8        &kp N9        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp CAPS      &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans      &kp PIPE     &kp QUESTION   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans        &trans          &trans        &trans     &ctrlshifv  &kp SLASH    &kp BACKSLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_BRACE        &kp RIGHT_BRACE
                                            &trans     &trans      &kp SPACE    &kp RET        &trans        &kp NUMBER_0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp COLON       &kp ASTRK     &kp EQUAL       &kp AMPERSAND  &trans
&trans  &trans    &trans  &trans    &trans    &trans       &kp PLUS   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT      &trans
&trans  &trans    &kp F9  &kp F10   &kp F11   &kp F12      &trans     &trans          &trans        &trans          &trans         &trans
                          &trans    &trans    &kp SPACE    &kp RET    &trans          &trans
            >;
        };
    };
};
